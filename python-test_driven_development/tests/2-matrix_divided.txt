# The ``2-matrix_divided`` module ::
=====================================

# Import ``matrix_divided`` function
----------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Passing a matrix with lists with the same size and divided by 2
-----------------------
>>> matrix_divided([[2, 4, 6], [8, 10, 12]], 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

# Passing an empty matrix
-----------------------
>>> matrix_divided([[]], 2)
[[]]

# Passing a matrix and a float div
-----------------------
>>> matrix_divided([[2, 4, 6], [8, 10, 12]], 3.5)
[[0.57, 1.14, 1.71], [2.29, 2.86, 3.43]]

# Passing a matrix with lists of floats with the same size and divided by 2
-----------------------
>>> matrix_divided([[2.5, 4.5, 6.5], [8.5, 10.5, 12.5]], 3)
[[0.83, 1.5, 2.17], [2.83, 3.5, 4.17]]

# Passing a matrix with list with different sizes
-----------------------
>>> matrix_divided([[2, 4, 5], [4, 2], [4, 2, 9]], 4)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Passing a matrix with lists with different types
-----------------------
>>> matrix_divided([[2, 4, 5], ["7", 2, 5], [4, 2, 9]], 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Passing a matrix with tuples of tuples
-----------------------
>>> matrix_divided(((2, 4, 5), ("7", 2, 5), (4, 2, 9)), 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Passing a matrix and a div zero
-----------------------
>>> matrix_divided([[2, 4, 6], [8, 10, 12]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Passing a matrix and a div of type string
-----------------------
>>> matrix_divided([[2, 4, 6], [8, 10, 12]], "4")
Traceback (most recent call last):
...
TypeError: div must be a number

